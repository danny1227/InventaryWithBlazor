@using Entities
@using Business

@inject NavigationManager NavigationManager;

<div>
    <EditForm Model="oProduct">
        <div>
            <div class="form-group">
                <label>Referencia: </label>
                <InputText @bind-Value="oProduct.ProductId" class="form-control" />
            </div>
            <div class="form-group">
                <label>Nombre del producto: </label>
                <InputText @bind-Value="oProduct.ProductName" class="form-control" />
            </div>
            <div class="form-group">
                <label>Descripción: </label>
                <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" />
            </div>
            <div class="form-group">
                <label>Categoria: </label>
                <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
                    @foreach (var category in categories)
                    {
                        <option value="@category.CategoryId">
                            @category.CategoryName
                        </option>
                    }
                </InputSelect>
            </div>

            <input type="button" value="Agregar Producto" @onclick="SaveProduct" />
        </div>
    </EditForm>
</div>

@code {
    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();
    }

    private void SaveProduct()
    {
        B_Product.CreateProduct(oProduct);  
        NavigationManager.NavigateTo("/product/list");
    }
}