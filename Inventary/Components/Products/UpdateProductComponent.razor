@rendermode InteractiveServer
@attribute [StreamRendering]
@using Entities;
@using Business;

@inject NavigationManager NavManager;

<EditForm Model="oProduct" OnValidSubmit="UpdateProduct" FormName="ProductUpdateForm">
    <div class="form-group">
        <label>Producto: </label>
        <InputText @bind-Value="oProduct.ProductName" class="form-control" />
    </div>
    <div class="form-group">
        <label>Descripción: </label>
        <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control" />
    </div>
    <div class="form-group">
        <label>Categoria: </label>
        <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">
                    @category.CategoryName
                </option>
            }
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Actualizar Producto</button>
</EditForm>

@code {
    [Parameter]
    public string idProduct { get; set; }

    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();
        oProduct = B_Product.ProductById(idProduct);
    }

    private void UpdateProduct()
    {
        B_Product.UpdateProduct(oProduct);
        NavManager.NavigateTo("product/list");
    }
}
